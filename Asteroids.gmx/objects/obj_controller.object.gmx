<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init variables

enum GameState {
    Menu = 0,
    Game = 1,
    GameOver = 2,
    Highscores = 3,
    QuitGame = 4
};
    
global.fading_in = false;
global.fading_out = false;

global.input_up = false;
global.input_down = false;
global.input_left = false;
global.input_right = false;
global.input_select = false;
global.input_escape = false;

global.current_game_state = GameState.Menu;
global.change_game_state = false;
global.new_game_state = -1;

global.part_explosion_exists = part_system_exists(ef_explosion);

global.player_killed = false;

global.points = 0;
global.life = 0;
global.num_lifes_gained = 0;

randomize();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check new state 

// Check new Game state
if (global.change_game_state &amp;&amp; (global.new_game_state != -1))
{
    switch (global.new_game_state)
    {
        case GameState.Menu:
            room_goto(rm_menu);
            break;

        case GameState.Game:
            global.points = 0;
            global.life = 3;
            room_goto(rm_game);
            break;
            
        case GameState.QuitGame:
            game_end();
            break;
    }
    
    global.current_game_state = global.new_game_state;
    global.change_game_state = false;
    global.new_game_state = -1;
}

// Check full screen and escape
scr_ToggleFullScreen();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if player is killed
if (global.player_killed)
{
    var randomangle = random(360);
    var o;
    o = instance_create(obj_player.x, obj_player.y, obj_deadplayer);
    o.angle = 0 + randomangle;
    o = instance_create(obj_player.x, obj_player.y, obj_deadplayer);
    o.angle = 120 + randomangle;
    o = instance_create(obj_player.x, obj_player.y, obj_deadplayer);
    o.angle = 240 + randomangle;
    
    with (obj_deadplayer)
    {
        direction = angle;
        image_angle = angle;
        speed = 3;
    }
    
    audio_play_sound(snd_explode, 10, 0);

    with (obj_player)
    {
        instance_destroy();
    }
    
    if (global.life &gt; 0)
    {
        global.life -= 1;
        instance_create(room_width/2, room_height/2, obj_player);
    }
    else
    {
        instance_create(0, 0, obj_gameover);
    }    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check score
var num_lifes = global.points div 10000;
if (num_lifes &gt; global.num_lifes_gained)
{
    global.life += num_lifes - global.num_lifes_gained;
    global.num_lifes_gained += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check input keys and gamepad
global.input_up = keyboard_check_pressed(vk_up);
global.input_down = keyboard_check_pressed(vk_down);
global.input_right = keyboard_check_pressed(vk_right);
global.input_left = keyboard_check_pressed(vk_left);
global.input_select = keyboard_check_pressed(vk_enter);
global.input_escape = keyboard_check_pressed(vk_escape);

global.player_killed = false;

/// Capture Escape Key to go to previous room or end game
if (global.input_escape) 
{
    if (global.current_game_state = GameState.Menu)
    {
        game_end();
    }
    
    if (global.current_game_state = GameState.Game)
    {
        global.change_game_state = true;
        global.new_game_state = GameState.Menu;    
    }
}
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
